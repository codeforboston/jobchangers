/**
 * Jobhopper API
 * Jobhopper Swagger API Docs
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Bls from './model/Bls';
import BlsTransition from './model/BlsTransition';
import OccupationTransition from './model/OccupationTransition';
import SocList from './model/SocList';
import SocLists from './model/SocLists';
import StateName from './model/StateName';
import StateNames from './model/StateNames';
import DefaultApi from './api/DefaultApi';


/**
* Jobhopper_Swagger_API_Docs.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var JobsApi = require('index'); // See note below*.
* var xxxSvc = new JobsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new JobsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new JobsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new JobsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Bls model constructor.
     * @property {module:model/Bls}
     */
    Bls,

    /**
     * The BlsTransition model constructor.
     * @property {module:model/BlsTransition}
     */
    BlsTransition,

    /**
     * The OccupationTransition model constructor.
     * @property {module:model/OccupationTransition}
     */
    OccupationTransition,

    /**
     * The SocList model constructor.
     * @property {module:model/SocList}
     */
    SocList,

    /**
     * The SocLists model constructor.
     * @property {module:model/SocLists}
     */
    SocLists,

    /**
     * The StateName model constructor.
     * @property {module:model/StateName}
     */
    StateName,

    /**
     * The StateNames model constructor.
     * @property {module:model/StateNames}
     */
    StateNames,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
