/**
 * Jobhopper API
 * Jobhopper Swagger API Docs
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OccupationTransition model module.
 * @module model/OccupationTransition
 * @version v1
 */
class OccupationTransition {
    /**
     * Constructs a new <code>OccupationTransition</code>.
     * @alias module:model/OccupationTransition
     * @param soc1 {String} 
     * @param soc2 {String} 
     */
    constructor(soc1, soc2) { 
        
        OccupationTransition.initialize(this, soc1, soc2);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, soc1, soc2) { 
        obj['soc1'] = soc1;
        obj['soc2'] = soc2;
    }

    /**
     * Constructs a <code>OccupationTransition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OccupationTransition} obj Optional instance to populate.
     * @return {module:model/OccupationTransition} The populated <code>OccupationTransition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OccupationTransition();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('soc1')) {
                obj['soc1'] = ApiClient.convertToType(data['soc1'], 'String');
            }
            if (data.hasOwnProperty('soc2')) {
                obj['soc2'] = ApiClient.convertToType(data['soc2'], 'String');
            }
            if (data.hasOwnProperty('total_soc')) {
                obj['total_soc'] = ApiClient.convertToType(data['total_soc'], 'Number');
            }
            if (data.hasOwnProperty('pi')) {
                obj['pi'] = ApiClient.convertToType(data['pi'], 'Number');
            }
            if (data.hasOwnProperty('occleaveshare')) {
                obj['occleaveshare'] = ApiClient.convertToType(data['occleaveshare'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
OccupationTransition.prototype['id'] = undefined;

/**
 * @member {String} soc1
 */
OccupationTransition.prototype['soc1'] = undefined;

/**
 * @member {String} soc2
 */
OccupationTransition.prototype['soc2'] = undefined;

/**
 * @member {Number} total_soc
 */
OccupationTransition.prototype['total_soc'] = undefined;

/**
 * @member {Number} pi
 */
OccupationTransition.prototype['pi'] = undefined;

/**
 * @member {Number} occleaveshare
 */
OccupationTransition.prototype['occleaveshare'] = undefined;






export default OccupationTransition;

