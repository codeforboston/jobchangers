/**
 * Jobhopper API
 * Jobhopper Swagger API Docs
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JobsApi);
  }
}(this, function(expect, JobsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JobsApi.Bls();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Bls', function() {
    it('should create an instance of Bls', function() {
      // uncomment below and update the code to test Bls
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be.a(JobsApi.Bls);
    });

    it('should have the property areaTitle (base name: "area_title")', function() {
      // uncomment below and update the code to test the property areaTitle
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property socCode (base name: "soc_code")', function() {
      // uncomment below and update the code to test the property socCode
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property socTitle (base name: "soc_title")', function() {
      // uncomment below and update the code to test the property socTitle
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property hourlyMeanWage (base name: "hourly_mean_wage")', function() {
      // uncomment below and update the code to test the property hourlyMeanWage
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property annualMeanWage (base name: "annual_mean_wage")', function() {
      // uncomment below and update the code to test the property annualMeanWage
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property totalEmployment (base name: "total_employment")', function() {
      // uncomment below and update the code to test the property totalEmployment
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property socDecimalCode (base name: "soc_decimal_code")', function() {
      // uncomment below and update the code to test the property socDecimalCode
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

    it('should have the property fileYear (base name: "file_year")', function() {
      // uncomment below and update the code to test the property fileYear
      //var instane = new JobsApi.Bls();
      //expect(instance).to.be();
    });

  });

}));
